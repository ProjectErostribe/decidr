{"version":3,"sources":["decidr.svg","Components/AddItem.js","Components/DisplayList.js","Components/GlobalActions.js","App.js","reportWebVitals.js","index.js"],"names":["AddItem","listContainer","setListContainer","useState","newItem","setNewItem","isValid","setIsValid","placeholder","setPlaceholder","isBlank","option","isInvalid","isDuplicate","undefined","find","item","toLowerCase","bool","errorMessage","console","log","id","onSubmit","event","preventDefault","trim","className","value","onInput","target","checkNewItem","required","type","DisplayList","listCount","length","deleteOption","filter","dataset","displayList","slice","reverse","map","index","onClick","reversed","GlobalActions","selectedItem","setSelectedItem","selectOption","random","Math","floor","clearSelection","restart","disabled","App","useEffect","JSON","parse","window","localStorage","getItem","updateLocalStorage","arr","setItem","stringify","src","decidr","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d06216c3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/decidr.5fcf9849.svg\";","import { useState } from \"react\";\n\nexport default function AddItem({ listContainer, setListContainer }) {\n  const [newItem, setNewItem] = useState('');\n  const [isValid, setIsValid] = useState('');\n  const [placeholder, setPlaceholder] = useState('Add an option');\n\n  const formSubmit = (event) => {\n    event.preventDefault();\n    if( isBlank(newItem.trim()) ) return setNewItem('');\n    if( isDuplicate(newItem.trim()) ) return setNewItem('');\n    setListContainer([...listContainer, newItem.trim()]);\n    setNewItem('');\n  }\n\n  const isBlank = (option) => {\n    if(option === '') {\n      isInvalid(true,'Option must not be blank');;\n      return true;\n    }\n    isInvalid(false);\n    return false;\n  }\n\n  const isDuplicate = (option) => {\n    const inArray = listContainer.find(item => {\n      return item.toLowerCase() === option.toLowerCase();\n    });\n    if(inArray !== undefined){\n      isInvalid(true,'Option already in list');\n      return true;\n    }\n    isInvalid(false);\n    return false;\n  }\n\n  const isInvalid = (bool, errorMessage) => {\n    console.log('Invalid:',bool,errorMessage);\n    if(bool){\n      setIsValid(\"invalid\");\n      setPlaceholder(errorMessage);\n      return\n    }\n    setIsValid(\"\");\n    setPlaceholder('Add an option');\n  }\n\n  const checkNewItem = (event) => {\n    setNewItem(event.target.value);\n    isBlank(event.target.value.trim());\n  }\n\n  return (\n    <form id=\"add-option\" onSubmit={formSubmit}>\n      <input\n        id=\"newOption\"\n        className={isValid}\n        value={newItem}\n        onInput={event => checkNewItem(event)}\n        placeholder={placeholder}\n        required\n      />\n      <button type=\"submit\">Add Item</button>\n    </form>\n  )\n}","export default function DisplayList({ listContainer, setListContainer }) {\n\n  let listCount = listContainer.length;\n\n  const deleteOption = (event) => {\n    setListContainer(listContainer.filter(item => item !== event.target.dataset.option));\n  }\n\n  const displayList = listContainer.slice(0).reverse().map(\n    (option, index) => (\n      <li key={index}>\n        <span>{listCount--}.</span>\n        <span>{option}</span>\n        <button data-option={option} onClick={deleteOption}>üóëÔ∏è</button>\n      </li>\n    )\n  );\n\n  return (\n    <div id=\"display-list\">\n      { listContainer.length > 0\n        ? <p>{listContainer.length} Options</p>\n        : <p>I can help you decide.<br />\n          Add options to your list.</p>\n      }\n      <ol reversed>\n        {displayList}\n      </ol>\n    </div>\n  )\n}","export default function GlobalActions({ selectedItem, setSelectedItem, listContainer, setListContainer }) {\n\n  const selectOption = () => {\n    const random = Math.floor(Math.random() * listContainer.length);\n    setSelectedItem( listContainer.length > 0 ? listContainer[random] : '' );\n  }\n\n  const clearSelection = () => {\n    setSelectedItem('');\n  }\n\n  const restart = () => {\n    clearSelection();\n    setListContainer([]);\n  }\n\n  return (\n    <>\n      {selectedItem.length > 0\n        ? <>\n          <button onClick={clearSelection}>Clear Selection</button>\n          <button onClick={selectOption}>Select Again</button>\n            <button onClick={restart}>Restart</button>\n        </>\n        : <>\n        { listContainer.length > 1\n          ?\n          <>\n            <button onClick={selectOption}>Select An Option</button>\n            <button onClick={restart}>Restart</button>\n          </>\n          : <button disabled>Add at least 2 options</button>\n        }\n        </>\n      }\n    </>\n  )\n}","import './App.css';\nimport decidr from './decidr.svg';\nimport { useState, useEffect } from 'react';\nimport AddItem from './Components/AddItem';\nimport DisplayList from './Components/DisplayList';\nimport GlobalActions from './Components/GlobalActions';\n\nfunction App() {\n  const [listContainer, setListContainer] = useState([]);\n  const [selectedItem, setSelectedItem] = useState('');\n\n  useEffect(\n    () => {\n      setListContainer(\n        JSON.parse(\n          window.localStorage.getItem(\"listContainer\") || \"[]\"\n        )\n      );\n    },\n    []\n  );\n\n  const updateLocalStorage = (arr) => {\n    window.localStorage.setItem(\"listContainer\",JSON.stringify(arr));\n    setListContainer(arr);\n  }\n  \n  return (\n    <div className=\"App\">\n      <header>\n        <img src={decidr} alt=\"\" className='logo' />\n        Decider\n      </header>\n      <main>\n        {selectedItem.length > 0\n          ? <p id=\"selected\">{selectedItem}</p>\n          : <DisplayList\n            listContainer={listContainer}\n            setListContainer={updateLocalStorage}\n          />\n        }\n      </main>\n      <AddItem\n        listContainer={listContainer}\n        setListContainer={updateLocalStorage}\n      />\n      <footer>\n        <GlobalActions\n          listContainer={listContainer}\n          setListContainer={updateLocalStorage}\n          selectedItem={selectedItem}\n          setSelectedItem={setSelectedItem}\n        />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}