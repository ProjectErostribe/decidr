{"version":3,"sources":["Components/Header.js","Components/AddItem.js","Components/DisplayList.js","utils/Random.js","Components/SelectItem.js","Components/ShowSelectedItem.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","AddItem","listContainer","setListContainer","useState","newItem","setNewItem","id","type","placeholder","value","onInput","e","target","onClick","DisplayList","displayList","map","item","index","Random","max","Math","floor","random","SelectItem","setSelectedItem","randomIndex","getRandomNumber","length","randomItem","ShowSelectedItem","selectedItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAAe,SAASA,IAEtB,OACE,wBAAQC,UAAU,SAAlB,SACE,0C,WCFS,SAASC,EAAT,GAAuD,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,iBAC/C,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAMA,OACE,sBAAKC,GAAG,UAAR,UACE,uBAAOC,KAAK,OAAOD,GAAG,WAAWE,YAAY,cAAcC,MAAOL,EAASM,QAAS,SAAAC,GAAC,OAAIN,EAAWM,EAAEC,OAAOH,UAC7G,wBAAQF,KAAK,SAASM,QAPT,WACfX,EAAiB,GAAD,mBAAKD,GAAL,CAAoBG,MAMlC,yBCZS,SAASU,EAAT,GAAyC,IAEhDC,EAF+C,EAAjBd,cAEFe,KAAI,SAACC,EAAMC,GAAP,OACpC,6BAAiBD,GAARC,MAGX,OACE,oBAAIZ,GAAG,eAAP,SACGS,I,kBCRcI,E,oGAQnB,SAAuBC,GACrB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,O,KCPvB,SAASI,EAAT,GAAyD,IAAnCvB,EAAkC,EAAlCA,cAAewB,EAAmB,EAAnBA,gBAQlD,OACE,wBAAQZ,QAPe,WACvB,IAAMa,EAAcP,EAAOQ,gBAAgB1B,EAAc2B,QACnDC,EAAa5B,EAAcyB,GACjCD,EAAgBI,IAIhB,yBCXW,SAASC,EAAT,GAA6C,IAAjBC,EAAgB,EAAhBA,aAEzC,OAAO,6BAAKA,IC2CCC,MArCf,WACE,MAA0C7B,mBAAS,IAAnD,mBAAOF,EAAP,KAAsBC,EAAtB,KACA,EAAwCC,mBAAS,IAAjD,mBAAO4B,EAAP,KAAqBN,EAArB,KAEA,OACE,sBAAKnB,GAAG,SAAR,UACE,cAACR,EAAD,IACA,+BACyB,IAAxBiC,EAAaH,OACV,gCACA,cAAC5B,EAAD,CACEC,cAAeA,EACfC,iBAAkBA,IAEpB,cAACY,EAAD,CACEb,cAAeA,IAEjB,cAACuB,EAAD,CACEvB,cAAeA,EACfwB,gBAAiBA,OAGnB,gCACA,cAACK,EAAD,CACEC,aAAcA,IAEhB,cAACP,EAAD,CACEvB,cAAeA,EACfwB,gBAAiBA,aCxBdQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1d45e1a0.chunk.js","sourcesContent":["export default function Header() {\n\n  return (\n    <header className=\"header\">\n      <p>\n        Decider\n      </p>\n    </header>\n  );\n}","import { useState } from \"react\";\n\nexport default function AddItem({ listContainer, setListContainer }) {\n  const [newItem, setNewItem] = useState('');\n\n  const onSubmit = () => {\n    setListContainer([...listContainer, newItem]);\n  }\n\n  return (\n    <div id=\"additem\">\n      <input type=\"text\" id=\"itemtext\" placeholder=\"Add an item\" value={newItem} onInput={e => setNewItem(e.target.value)} />\n      <button type=\"submit\" onClick={onSubmit}>Add Item</button>\n    </div>\n  );\n}","export default function DisplayList({ listContainer }) {\n  \n  const displayList = listContainer.map((item, index) => (\n    <li key={index}>{item}</li>\n  ));\n\n  return (\n    <ul id=\"display-list\">\n      {displayList}\n    </ul>\n  );\n}","export default class Random {\n  /**\n   * Get a random number from 0 to below max\n   * @param {number} max \n   * @returns {number} a random number\n   * call this function with a max number that random numbers should be less than.\n   * ex: Random.getRandomNumber(10) will return a number between 0 to 9, inclusive\n   */\n  static getRandomNumber(max) {\n    return Math.floor(Math.random() * max);\n  }\n}","import Random from \"../utils/Random\";\n\nexport default function SelectItem({ listContainer, setSelectedItem }) {\n\n  const selectRandomItem = () => {\n    const randomIndex = Random.getRandomNumber(listContainer.length);\n    const randomItem = listContainer[randomIndex];\n    setSelectedItem(randomItem);\n  }\n\n  return (\n    <button onClick={selectRandomItem}>Select Item</button>\n  );\n}","export default function ShowSelectedItem({ selectedItem }) {\n\n  return <h1>{selectedItem}</h1>\n}","import './App.css';\nimport { useState } from 'react';\nimport Header from './Components/Header';\nimport AddItem from './Components/AddItem';\nimport DisplayList from './Components/DisplayList';\nimport SelectItem from './Components/SelectItem';\nimport ShowSelectedItem from './Components/ShowSelectedItem';\n\nfunction App() {\n  const [listContainer, setListContainer] = useState([]);\n  const [selectedItem, setSelectedItem] = useState('');\n\n  return (\n    <div id=\"decidr\">\n      <Header />\n      <main>\n      {selectedItem.length === 0\n        ? <div>\n          <AddItem\n            listContainer={listContainer}\n            setListContainer={setListContainer}\n          />\n          <DisplayList\n            listContainer={listContainer}\n          />\n          <SelectItem\n            listContainer={listContainer}\n            setSelectedItem={setSelectedItem}\n          />\n        </div>\n        : <div>\n          <ShowSelectedItem\n            selectedItem={selectedItem}\n          />\n          <SelectItem\n            listContainer={listContainer}\n            setSelectedItem={setSelectedItem}\n          />\n        </div>\n      }\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}