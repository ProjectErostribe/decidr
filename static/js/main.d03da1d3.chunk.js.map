{"version":3,"sources":["decidr.svg","Components/AddItem.js","Components/DisplayList.js","Components/GlobalActions.js","App.js","reportWebVitals.js","index.js"],"names":["AddItem","listContainer","setListContainer","useState","newItem","setNewItem","id","value","onInput","event","target","placeholder","type","onClick","preventDefault","DisplayList","displayList","map","option","index","length","GlobalActions","selectedItem","setSelectedItem","selectOption","random","Math","floor","clearSelection","restart","disabled","App","className","src","decidr","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAAe,G,MAAA,IAA0B,oC,cCE1B,SAASA,EAAT,GAAuD,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,iBAC/C,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAQA,OACE,uBAAMC,GAAG,aAAT,UACE,uBACEC,MAAOH,EACPI,QAAS,SAAAC,GAAK,OAAIJ,EAAWI,EAAMC,OAAOH,QAC1CI,YAAY,kBAEd,wBAAQC,KAAK,SAASC,QAbP,SAACJ,GAClBA,EAAMK,iBACNZ,EAAiB,GAAD,mBAAKD,GAAL,CAAoBG,KACpCC,EAAW,KAUT,yBClBS,SAASU,EAAT,GAAyC,IAAlBd,EAAiB,EAAjBA,cAE9Be,EAAcf,EAAcgB,KAChC,SAACC,EAAQC,GAAT,OACE,6BAAiBD,GAARC,MAIb,OACE,sBAAKb,GAAG,eAAR,UACIL,EAAcmB,OAAS,EACrB,8BAAInB,EAAcmB,OAAlB,cACA,uDAAyB,uBAAzB,+BAGJ,6BACGJ,OChBM,SAASK,EAAT,GAA4F,IAAnEC,EAAkE,EAAlEA,aAAcC,EAAoD,EAApDA,gBAAiBtB,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,iBAE9EsB,EAAe,WACnB,IAAMC,EAASC,KAAKC,MAAMD,KAAKD,SAAWxB,EAAcmB,QACxDG,EAAiBtB,EAAcmB,OAAS,EAAInB,EAAcwB,GAAU,KAGhEG,EAAiB,WACrBL,EAAgB,KAGZM,EAAU,WACdD,IACA1B,EAAiB,KAGnB,OACE,mCACGoB,EAAaF,OAAS,EACnB,qCACA,wBAAQP,QAASe,EAAjB,6BACA,wBAAQf,QAASW,EAAjB,0BACE,wBAAQX,QAASgB,EAAjB,wBAEF,mCACA5B,EAAcmB,OAAS,EAEvB,qCACE,wBAAQP,QAASW,EAAjB,8BACA,wBAAQX,QAASgB,EAAjB,wBAEA,wBAAQC,UAAQ,EAAhB,wCCUGC,MAlCf,WACE,MAA0C5B,mBAAS,IAAnD,mBAAOF,EAAP,KAAsBC,EAAtB,KACA,EAAwCC,mBAAS,IAAjD,mBAAOmB,EAAP,KAAqBC,EAArB,KAEA,OACE,sBAAKS,UAAU,MAAf,UACE,mCACE,qBAAKC,IAAKC,EAAQC,IAAI,GAAGH,UAAU,SADrC,aAIA,+BACGV,EAAaF,OAAS,EACnB,mBAAGd,GAAG,WAAN,SAAkBgB,IAClB,cAACP,EAAD,CACAd,cAAeA,MAIrB,cAACD,EAAD,CACEC,cAAeA,EACfC,iBAAkBA,IAEpB,iCACE,cAACmB,EAAD,CACEpB,cAAeA,EACfC,iBAAkBA,EAClBoB,aAAcA,EACdC,gBAAiBA,UCtBZa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d03da1d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/decidr.18a014d5.svg\";","import { useState } from \"react\";\r\n\r\nexport default function AddItem({ listContainer, setListContainer }) {\r\n  const [newItem, setNewItem] = useState('');\r\n\r\n  const formSubmit = (event) => {\r\n    event.preventDefault();\r\n    setListContainer([...listContainer, newItem]);\r\n    setNewItem('');\r\n  }\r\n\r\n  return (\r\n    <form id=\"add-option\">\r\n      <input\r\n        value={newItem}\r\n        onInput={event => setNewItem(event.target.value)}\r\n        placeholder=\"Add an option\"\r\n      />\r\n      <button type=\"submit\" onClick={formSubmit}>Add Item</button>\r\n    </form>\r\n  )\r\n}","export default function DisplayList({ listContainer }) {\r\n\r\n  const displayList = listContainer.map(\r\n    (option, index) => (\r\n      <li key={index}>{option}</li>\r\n    )\r\n  );\r\n\r\n  return (\r\n    <div id=\"display-list\">\r\n      { listContainer.length > 0\r\n        ? <p>{listContainer.length} Options</p>\r\n        : <p>I can help you decide.<br />\r\n          Add options to your list.</p>\r\n      }\r\n      <ol>\r\n        {displayList}\r\n      </ol>\r\n    </div>\r\n  )\r\n}","export default function GlobalActions({ selectedItem, setSelectedItem, listContainer, setListContainer }) {\r\n\r\n  const selectOption = () => {\r\n    const random = Math.floor(Math.random() * listContainer.length);\r\n    setSelectedItem( listContainer.length > 0 ? listContainer[random] : '' );\r\n  }\r\n\r\n  const clearSelection = () => {\r\n    setSelectedItem('');\r\n  }\r\n\r\n  const restart = () => {\r\n    clearSelection();\r\n    setListContainer([]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {selectedItem.length > 0\r\n        ? <>\r\n          <button onClick={clearSelection}>Clear Selection</button>\r\n          <button onClick={selectOption}>Select Again</button>\r\n            <button onClick={restart}>Restart</button>\r\n        </>\r\n        : <>\r\n        { listContainer.length > 1\r\n          ?\r\n          <>\r\n            <button onClick={selectOption}>Select An Option</button>\r\n            <button onClick={restart}>Restart</button>\r\n          </>\r\n          : <button disabled>Add at least 2 options</button>\r\n        }\r\n        </>\r\n      }\r\n    </>\r\n  )\r\n}","import './App.css';\r\nimport decidr from './decidr.svg';\r\nimport { useState } from 'react';\r\nimport AddItem from './Components/AddItem';\r\nimport DisplayList from './Components/DisplayList';\r\nimport GlobalActions from './Components/GlobalActions';\r\n\r\nfunction App() {\r\n  const [listContainer, setListContainer] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState('');\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <img src={decidr} alt=\"\" className='logo' />\r\n        Decider\r\n      </header>\r\n      <main>\r\n        {selectedItem.length > 0\r\n          ? <p id=\"selected\">{selectedItem}</p>\r\n          : <DisplayList\r\n            listContainer={listContainer}\r\n          />\r\n        }\r\n      </main>\r\n      <AddItem\r\n        listContainer={listContainer}\r\n        setListContainer={setListContainer}\r\n      />\r\n      <footer>\r\n        <GlobalActions\r\n          listContainer={listContainer}\r\n          setListContainer={setListContainer}\r\n          selectedItem={selectedItem}\r\n          setSelectedItem={setSelectedItem}\r\n        />\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}